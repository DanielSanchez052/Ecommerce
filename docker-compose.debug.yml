version: '3.9' 
services:
  redis:
    image: "redis:alpine"
    networks: 
      - web_network
  db:
    container_name: db
    image: postgres:13.3-alpine
    volumes:
      - ecommercedb:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=Ecommerce_app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - db_network
  web:
    image: web
    container_name: web
    restart: always
    build: 
      context: .
      dockerfile: ./Dockerfile
    command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000"]
    volumes:
      - .:/code
    ports:
      - 8000:8000
      - 5678:5678
    networks:
      - db_network
      - web_network
    depends_on:
      - db
      - redis  
  celery:
    build: .
    command: celery -A Ecommerce worker --loglevel=info
    environment:
      - DEBUG=1
    volumes:
      - .:/code
    networks:
      - db_network
      - web_network
    depends_on:
      - web 
      - db
      - redis
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
volumes:
  ecommercedb:
    external: true
